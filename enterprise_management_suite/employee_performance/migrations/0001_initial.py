# Generated by Django 2.0 on 2018-03-22 00:26

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import employee_performance.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bathopele',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=255, verbose_name='Batho Phele Principles')),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name_plural': 'Batho Phele Principles',
            },
        ),
        migrations.CreateModel(
            name='CoreManagementCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('weight', models.FloatField(default=0)),
                ('dept_specific', models.CharField(blank=True, max_length=255, null=True)),
                ('bophele', models.ManyToManyField(to='employee_performance.Bathopele')),
            ],
            options={
                'verbose_name_plural': 'Core Management Criteria',
                'ordering': ['description', 'weight'],
            },
        ),
        migrations.CreateModel(
            name='GenericSTD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('weight', models.FloatField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Generic Standards',
            },
        ),
        migrations.CreateModel(
            name='KeyResultArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('kra_pa_id', models.UUIDField()),
                ('kra_id', models.UUIDField(unique=True)),
                ('kra', models.TextField(blank=True, null=True, verbose_name='KRA Entry')),
                ('slug', models.SlugField()),
                ('self_weight', models.FloatField(blank=True, default=0, null=True, verbose_name='Employee Weight')),
                ('super_weight', models.FloatField(blank=True, default=0, null=True, verbose_name='Senior Management Service Weight')),
                ('self_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Self Rating')),
                ('super_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Supervisor Rating')),
                ('agreed_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Supervisor Rating')),
                ('evidence', models.FileField(blank=True, null=True, upload_to=django.core.files.storage.FileSystemStorage(location='media/ep/performance/evidence/'))),
                ('is_active', models.BooleanField(default=True)),
                ('bathophele', models.ManyToManyField(to='employee_performance.Bathopele')),
                ('employee', models.ManyToManyField(to='accounts.Employee')),
            ],
            options={
                'verbose_name_plural': 'Key Result Areas',
            },
        ),
        migrations.CreateModel(
            name='KRAReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('kra_id', models.UUIDField()),
                ('review_type', models.CharField(choices=[('formal', 'Formal Review'), ('informal', 'Informal Review')], max_length=8, verbose_name='Review Type')),
                ('is_pa_confirmed', models.BooleanField(default=False, verbose_name='PA Confirm')),
                ('is_signed', models.BooleanField(default=False, verbose_name='Is Review Signed')),
                ('dispute', models.TextField(blank=True, null=True)),
                ('email_is_sent', models.BooleanField(default=False, verbose_name='Is Notification Email Sent')),
                ('is_active', models.BooleanField(default=True)),
                ('emp_weight', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Weight Percentage')),
                ('super_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Supervisor Rating')),
                ('final_score', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Final Score')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Employee')),
            ],
            options={
                'verbose_name_plural': 'Review KRAs',
            },
        ),
        migrations.CreateModel(
            name='MeasurableOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('mo_kra_id', models.UUIDField()),
                ('output_id', models.UUIDField()),
                ('output', models.TextField(verbose_name='Measurable Output')),
                ('slug', models.SlugField()),
                ('self_weight', models.FloatField(blank=True, default=0, null=True, verbose_name='Self Output Weight')),
                ('super_weight', models.FloatField(blank=True, default=0, null=True, verbose_name='Senior Management Service Weight')),
                ('self_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Self Rating')),
                ('agreed_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Supervisor Rating')),
                ('super_rating', employee_performance.models.PositiveIntegerRangeField(blank=True, null=True, verbose_name='Supervisor Rating')),
                ('time_frame', models.CharField(blank=True, choices=[('d', 'Daily'), ('w', 'Weekly'), ('m', 'Monthly'), ('a', 'Annually')], max_length=1, null=True, verbose_name='Time Frame')),
                ('cal_date', models.DateField(blank=True, null=True, verbose_name='Calendar Date')),
                ('resources', models.TextField(blank=True, null=True, verbose_name='Resources')),
                ('is_active', models.BooleanField(default=True)),
                ('supervisor', models.ManyToManyField(related_name='kra_supervisor', to='accounts.Employee')),
            ],
            options={
                'verbose_name_plural': 'Measurable Outputs',
            },
        ),
        migrations.CreateModel(
            name='MOReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('reviewed_kra_id', models.UUIDField()),
                ('emp_weight', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Weight Percentage')),
                ('self_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Self Percentage')),
                ('super_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Supervisor Rating')),
                ('agreed_rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Agreed Rating')),
                ('score', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='Score')),
                ('self_comment', models.TextField(verbose_name='Employee Comment')),
                ('super_comment', models.TextField(verbose_name='Supervisor Comment')),
                ('pa_eight', models.DecimalField(decimal_places=1, default=0.0, max_digits=4, verbose_name='PA Weight')),
            ],
            options={
                'verbose_name_plural': 'Review Measurable Outputs',
            },
        ),
        migrations.CreateModel(
            name='PerformanceAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('pa_id', models.UUIDField(unique=True)),
                ('is_signed_staff', models.BooleanField(default=False)),
                ('is_signed_super', models.BooleanField(default=False)),
                ('period_start', models.DateField(blank=True, null=True)),
                ('period_end', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('kras', models.ManyToManyField(to='employee_performance.KeyResultArea')),
                ('staff', models.ManyToManyField(to='accounts.Employee')),
                ('supervisor', models.ManyToManyField(to='accounts.Supervisor')),
            ],
            options={
                'verbose_name_plural': 'Performance Agreements (PAs)',
            },
        ),
        migrations.CreateModel(
            name='ReviewPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('period_start', models.DateField(verbose_name='Period Start')),
                ('period_end', models.DateField(verbose_name='Period End')),
                ('cycle', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Review Periods',
            },
        ),
        migrations.CreateModel(
            name='TrainingNeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('pdp_kra_id', models.UUIDField()),
                ('pdp_id', models.UUIDField(unique=True)),
                ('t_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Training Need Type')),
                ('outcome', models.TextField(blank=True, null=True, verbose_name='Expected Outcome')),
                ('time_frame', models.CharField(choices=[('d', 'Daily'), ('w', 'Weekly'), ('m', 'Monthly'), ('a', 'Annually')], max_length=1, verbose_name='Time Frame')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='krareview',
            name='outputs',
            field=models.ManyToManyField(to='employee_performance.MOReview'),
        ),
        migrations.AddField(
            model_name='krareview',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_performance.ReviewPeriod'),
        ),
        migrations.AddField(
            model_name='krareview',
            name='supervisor',
            field=models.ManyToManyField(related_name='review_supervisor', to='accounts.Employee'),
        ),
        migrations.AddField(
            model_name='keyresultarea',
            name='outputs',
            field=models.ManyToManyField(to='employee_performance.MeasurableOutput'),
        ),
        migrations.AddField(
            model_name='keyresultarea',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_performance.KRAReview'),
        ),
        migrations.AddField(
            model_name='keyresultarea',
            name='supervisor',
            field=models.ManyToManyField(to='accounts.Supervisor'),
        ),
        migrations.AddField(
            model_name='keyresultarea',
            name='training_needs',
            field=models.ManyToManyField(to='employee_performance.TrainingNeed'),
        ),
        migrations.AddField(
            model_name='coremanagementcriteria',
            name='g_std',
            field=models.ManyToManyField(to='employee_performance.GenericSTD'),
        ),
    ]
